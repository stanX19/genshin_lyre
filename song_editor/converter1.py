
def separate(enter="", sep="---"):
    if enter.find("[") >= 0:
        enter = enter.replace("[","(").replace("]",")")

    enter = enter.split("\n")

    temp_store = ""

    out = []

    for rows in enter:
        keys = []
        multikey = False
        for letters in rows:
            if multikey:  # in bracket
                if letters == ")":  # end of bracket
                    keys.append(temp_store)
                    temp_store = ""
                    multikey = False
                else:
                    temp_store += letters

            elif letters == "(":  # start of bracket
                multikey = True

            elif letters == " " or letters == "-":
                keys.append('')
            else:
                keys.append(letters)

        out.append(keys)

    export = f"\n".join([sep.join(i)+sep[:-1] for i in out])
    if len(out) > 1:
        export = export.replace("-"," ").strip().replace(" ","-")

    connected = '%s+%s' % (sep,sep)
    if connected in export:
        export = export.replace(connected,"")

    export = braket_wrap(export).strip()

    return export

def replace_words(enter="",old_str='',new_str=''):
    out = enter.replace(old_str, new_str)
    return out
def pc_mobile_convert(enter=""):
    mobile_ver1 = ['a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7',
              'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7',
              'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7']
    mobile_ver2 = ['1do', '1re', '1mi', '1fa', '1so', '1la', '1ti',
                   '2do', '2re', '2mi', '2fa', '2so', '2la', '2ti',
                   '3do', '3re', '3mi', '3fa', '3so', '3la', '3ti']
    pc = ["Q", "W", "E", "R", "T", "Y", "U",
          "A", "S", "D", "F", "G", "H", "J",
          "Z", "X", "C", "V", "B", "N", "M"]
    for i in mobile_ver2:
        if i in enter:
            mobile = mobile_ver2
            break
    else:
        mobile = mobile_ver1



    if any(keys in enter for keys in mobile):
        for i in range(len(pc)):
            enter = enter.replace(mobile[i], pc[i])
    else:
        for i in range(len(pc)):
            enter = enter.replace(pc[i], mobile[i])

    return enter


def braket_wrap(enter=""):
    enter = enter.upper().replace(" + ", "").replace(",", "---").replace(" \n", "\n")

    if "(" in enter:
        enter = enter.replace("(", "").replace(")", "")

    if "[" in enter:
        enter = enter.replace("][", " ").replace("]", " ").replace("[", " ")

    abc = "Q W E R T Y U A S D F G H J Z X C V B N M".split()

    duplicate_possibilities = ['QQ', 'WW', 'EE', 'RR', 'TT', 'YY', 'UU',
                               'AA', 'SS', 'DD', 'FF', 'GG', 'HH', 'JJ',
                               'ZZ', 'XX', 'CC', 'VV', 'BB', 'NN', 'MM']
    for i, e in enumerate(abc):
        enter = enter.replace(duplicate_possibilities[i], e)

    enter = enter.replace(" ", "---").replace("-", " - ").split("\n")

    out = []
    for i, item in enumerate(enter):
        temp_store = enter[i].split()
        out.append([])
        for ln, e in enumerate(temp_store):
            if len(e) > 1:
                if 'beat' not in e.lower():
                    e = "".join(dict.fromkeys(e))
                out[i].append("(" + e + ")")
            else:
                out[i].append(e)

    enter = """"""
    for i in out:
        for e in i:
            enter += e
        enter += "\n"

    return enter.strip()


def smplify(enter=""):
    a = "Q W E R T Y U".split()
    b = "A S D F G H J".split()
    c = "Z X C V B N M".split()
    inA = 0
    inB = 0
    inC = 0
    temp_store = ""
    out = []
    multikey = False
    for i in range(len(enter)):
        if multikey == True:  # in bracket
            if enter[i] == ")":  # end of bracket

                # test subject

                if len(temp_store) >= 3:  # and simplify:

                    if (inA != 0 and inC != 0 and inB == 0) or (inA != 0 and inC != 0 and inB != 0 and inC > 1) or (
                            inA == 0 and inC != 0 and inB != 0):
                        # in a and in b     /   c is more than 1 when abc exist     /  in c and b, ps: dont change, more than one c is broken
                        for eee in c:
                            if inC == 1:  # reduce row c only to one note left
                                break
                            elif temp_store.find(eee) >= 0:
                                temp_store = temp_store.replace(eee, "")
                                inC -= 1

                    if inA != 0 and inC != 0 and inB != 0:  # dealing with 3 row notes
                        # in a b c
                        if inB > inA and inB > inC:  # b contain most notes
                            for eee in c:  # reduce all c or until allowed limit
                                if len(temp_store) <= 2:
                                    break
                                temp_store = temp_store.replace(eee, "")
                            for eee in b:
                                if inB == 1:  # reduce row b only to one note left
                                    break
                                elif temp_store.find(eee) >= 0:
                                    temp_store = temp_store.replace(eee, "")
                                    inB -= 1
                        else:  # inA > inB and inA > inC or inA == inB == inC:
                            for eee in b:  # taking everything away in b
                                temp_store = temp_store.replace(eee, "")

                # end of test subjuet

                out.append(temp_store)
                temp_store = ""
                inA = inB = inC = 0
                multikey = False
            else:
                if enter[i] in a:
                    inA += 1
                if enter[i] in b:
                    inB += 1
                if enter[i] in c:
                    inC += 1
                temp_store += enter[i]

        elif enter[i] == "(":  # start of bracket
            multikey = True

        elif enter[i] == "\n":
            out.append("&$&")

        elif enter[i] == " ":
            out.append("-")
        else:
            out.append(enter[i])

    return "".join(out).replace("&$&", "\n")

def nightly_to_score(text=''):
    import json, os
    if os.path.exists(text):
        with open(text, encoding="utf-8") as f:
            text = json.load(f)[0]
    else:
        try:
            text = json.loads(text)[0]
        except Exception:
            raise Exception('The given text is not a Genshin nightly file')
    try:
        notes = text['columns']
        bpm = text["bpm"]
    except KeyError:
        raise Exception('The given text is not a Genshin nightly file')
    KEYS = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'Z', 'X', 'C', 'V', 'B', 'N', 'M']
    NOTES = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
    NOTE_KEY = dict(zip(NOTES, KEYS))
    beat_dash = ['-']
    all_note_type = [data[0] for data in notes]
    highest_note_type = max(all_note_type)
    for val in range(highest_note_type):
        beat_dash.insert(0, 2*highest_note_type[0])
    beat = round((60/bpm)/(highest_note_type+1),3)
    score = f"(beat{beat})-\n-"
    for data in notes:
        temp_store = ''
        for note in data[1]:
            note_no = note[0]
            if note_no not in NOTES:
                pass
            temp_store += NOTE_KEY[note_no]

        if len(temp_store) > 1:
            score += f"({temp_store})"
        else:
            if score [-1] in ['-',')']:
                score += temp_store
            else:
                score += f"({temp_store})"

        beat = data[0]
        score += beat_dash[beat]

    line_break = 70
    to_break = line_break
    score = score.replace("--------", "-------")  # too many dashes = extra delay
    score = score.replace("-", " ").strip().replace(" ", "-")
    score = list(score)
    for idx, key in enumerate(score):
        if idx > to_break and key == "-" and idx != len(score) -1 and score[idx + 1] != '-':
            score[idx] = "\n"
            to_break += line_break
    score = "".join(score)
    return score

def score_to_nightly(score='',name='Unknown'):
    import math, re, json
    score = score.upper()
    KEYS = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'Z', 'X', 'C', 'V', 'B', 'N', 'M']
    NOTES = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
    KN = dict(zip(KEYS, NOTES))
    try:
        # 0.0059 is the delay by time.sleep, in nightly score there is no delay so add it back
        initial_spb = float(re.findall("[-+]?[.]?[\d]+(?:,\d\d\d)*[.]?\d*(?:[eE][-+]?\d+)?", score)[0]) + 0.0059
    except IndexError:
        initial_spb = 0.15
    bpm = round(60/initial_spb)
    jsonFile = {"data":{"isComposed":True,"isComposedVersion":True,"appName":"Genshin"},"name":name,"bpm":bpm,"pitch":"C","breakpoints":[0],"instruments":["Lyre","Lyre","Lyre"]}

    # genshin nightly takes [delay_after_note_is_played, [note,"100"]
    # so we will need to scan from backwards to determine the type of delay
    # delay = {'----': 0, '--': 1, '-':2, '':3} #'' means no delay between two notes
    # use binary to represent all 1 to 7, eg '--' + '-' = '---'
    # we will need to append note by note to the column
    # idea: linear scan, using % syntax to confirm type of delay
    # btw i am not doing this shit, the syntax below reverses the whole string, good luck
    #score = score[::-1]

    global columns
    columns = []
    bucket = ""  # [[0,"100"],[1,"100]]
    in_bucket = False
    idx = 0
    ratio = 1

    def append_representative_key(note):
        global columns
        if ratio == 1:
            columns.append([0, note])
            return
        elif ratio < 0.125:
            columns.append([3, note])
            return
        noOf125Left = ratio / 0.125
        ratio_key = {8: 0, 4: 1, 2: 2, 1: 3}
        final_keys = []
        for value, note_type in ratio_key.items():
            needed_no = math.floor(noOf125Left / value)
            if needed_no:
                final_keys += [note_type] * needed_no
                noOf125Left %= value
        final_keys.sort()
        self_note = final_keys[0]
        extra_note = [[note_type, []] for note_type in final_keys[1:]]

        columns.append([self_note,note])
        columns += extra_note

    while idx < len(score):
        key = score[idx]
        if in_bucket:
            if key != ")":
                bucket+=key
            else:
                if "BEAT" in bucket:
                    if "BEAT0.07" in bucket:
                        pass
                    spb = float(re.findall("[-+]?[.]?[\d]+(?:,\d\d\d)*[.]?\d*(?:[eE][-+]?\d+)?", bucket)[0]) + 0.0059
                    ratio = spb/initial_spb
                elif "$$" not in bucket:
                    bucket = [[KN[key], "100"] for key in bucket]
                    if idx < len(score) - 1 and score[idx+1] == "-":
                        append_representative_key(bucket)
                        idx += 1
                    else:
                        columns.append([2, bucket])
                bucket = ""
                in_bucket = False
        elif key == "(":
            in_bucket = True
        else:
            key_no = KN.get(key,None)
            if key_no is not None:
                if idx < len(score)-1 and score[idx+1] == "-":
                    append_representative_key([[key_no, "100"]])
                    idx += 1
                else:
                    columns.append([2,[[key_no, "100"]]])
            elif key.isnumeric():
                ratio *= int(key)/10
                append_representative_key([])
                ratio /= int(key)/10
            else:
                append_representative_key([])
        idx += 1
    jsonFile["columns"] = columns
    jsonFile = json.dumps([jsonFile])
    return jsonFile

def reduce_dashes(txt:str):
    """ "----" --> "---\""""
    txt = txt.replace("-","***-***").replace("******","").replace("-***","").replace("***","").replace("-\n-","-\n--")
    return txt

def get_file_path():
    from easygui import fileopenbox
    return fileopenbox()
if __name__ == "__main__":
    print(nightly_to_score("""[{"data": {"isComposed": true, "isComposedVersion": true, "appName": "Genshin"}, "name": "enkanomiya battle theme", "bpm": 1129, "pitch": "C", "breakpoints": [0], "instruments": ["Lyre", "Lyre", "Lyre"], "columns": [3, [], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [3, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [3, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [3, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [3, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, [[10, "100"], [12, "100"]]], [0, []], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[10, "100"], [12, "100"]]], [0, []], [1, []], [0, [[8, "100"], [19, "100"]]], [0, []], [0, []], [0, [[9, "100"]]], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"]]], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[19, "100"], [12, "100"]]], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"], [19, "100"]]], [0, []], [0, []], [0, [[9, "100"]]], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"]]], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[19, "100"], [12, "100"]]], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"], [17, "100"]]], [0, []], [0, []], [0, [[9, "100"]]], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"]]], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [0, []], [0, [[0, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[17, "100"], [12, "100"]]], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"], [15, "100"]]], [0, []], [0, []], [0, [[9, "100"]]], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"]]], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [0, []], [0, [[0, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"], [15, "100"]]], [0, []], [0, []], [0, [[9, "100"]]], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"]]], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, [[4, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[1, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[0, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[1, "100"]]], [0, []], [0, []], [1, []], [0, [[2, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[12, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[17, "100"]]], [0, []], [0, []], [1, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[12, "100"], [17, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [0, [[8, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [1, []], [2, []], [3, []], [0, [[9, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [0, [[11, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [1, []], [2, []], [3, []], [0, [[12, "100"], [8, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[8, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[8, "100"]]], [0, []], [0, []], [0, []], [1, []], [2, []], [3, []], [0, [[10, "100"], [8, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[8, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"], [8, "100"]]], [0, []], [0, []], [1, []], [0, [[1, "100"]]], [0, []], [0, []], [1, []], [0, [[2, "100"], [9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"], [9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[2, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [1, []], [0, [[11, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [1, []], [0, [[1, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[7, "100"]]], [0, []], [0, []], [1, []], [0, [[20, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[2, "100"], [9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[1, "100"], [9, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"], [9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[11, "100"], [9, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"], [9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[11, "100"]]], [0, []], [0, []], [1, []], [0, [[2, "100"], [11, "100"]]], [0, []], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[1, "100"], [11, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"], [11, "100"]]], [0, []], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[11, "100"]]], [0, []], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[11, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"], [9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[19, "100"]]], [0, []], [0, []], [1, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[19, "100"]]], [0, []], [0, []], [1, []], [0, [[2, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[1, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[19, "100"]]], [0, []], [0, []], [1, []], [0, [[19, "100"]]], [0, []], [0, []], [1, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"], [20, "100"]]], [0, []], [0, []], [1, []], [0, [[20, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[20, "100"]]], [0, []], [0, []], [1, []], [0, [[20, "100"]]], [0, []], [0, []], [1, []], [0, [[20, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[20, "100"]]], [0, []], [0, []], [1, []], [0, [[20, "100"]]], [0, []], [0, []], [1, []], [0, [[20, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[20, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"], [20, "100"]]], [0, []], [0, []], [1, []], [0, [[20, "100"]]], [0, []], [0, []], [1, []], [0, [[2, "100"]]], [0, []], [0, []], [1, []], [0, [[20, "100"]]], [0, []], [0, []], [1, []], [0, [[5, "100"], [10, "100"]]], [0, []], [0, []], [1, []], [0, [[10, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[10, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"], [10, "100"]]], [0, []], [0, []], [1, []], [0, [[10, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[10, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"], [10, "100"]]], [0, []], [0, []], [1, []], [0, [[10, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[10, "100"]]], [0, []], [0, []], [1, []], [0, [[10, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"], [10, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[1, "100"], [10, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"], [11, "100"]]], [0, []], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[11, "100"]]], [0, []], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[1, "100"], [11, "100"]]], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [1, []], [0, [[13, "100"], [9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[4, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [3, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"], [19, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"], [17, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"], [15, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [2, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [19, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"], [19, "100"]]], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [1, []], [0, [[13, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"], [18, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[20, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [20, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, [[13, "100"], [20, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [20, "100"]]], [0, []], [0, []], [0, []], [0, [[20, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, [[13, "100"], [20, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"], [20, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, [[20, "100"]]], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [3, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [0, [[0, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[20, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[7, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [0, [[8, "100"], [9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [0, [[8, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"], [10, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[7, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [0, [[10, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [0, [[11, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [0, [[15, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[3, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"], [15, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[11, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[20, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[0, "100"], [8, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[11, "100"]]], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [1, []], [0, [[13, "100"], [20, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [0, [[0, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[2, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [0, [[6, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"]]], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[20, "100"]]], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"]]], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[13, "100"], [16, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[20, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, []], [1, []], [0, [[1, "100"]]], [0, []], [0, []], [1, []], [0, [[2, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[19, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [1, []], [0, [[8, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[18, "100"]]], [0, []], [0, []], [0, []], [0, [[18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[18, "100"]]], [0, []], [0, []], [1, []], [0, [[2, "100"]]], [0, []], [0, []], [1, []], [0, [[1, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"], [18, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"], [17, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [1, []], [0, [[2, "100"], [17, "100"]]], [0, []], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[17, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [1, []], [0, [[9, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[10, "100"], [17, "100"]]], [0, []], [1, []], [0, [[11, "100"]]], [0, []], [0, [[10, "100"]]], [0, []], [1, []], [0, [[9, "100"], [15, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[15, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[8, "100"], [15, "100"]]], [0, []], [1, []], [0, [[7, "100"]]], [0, []], [0, [[20, "100"]]], [0, []], [0, [[19, "100"]]], [0, []], [1, []], [0, [[20, "100"], [16, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[9, "100"], [16, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[16, "100"]]], [0, []], [0, []], [0, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[19, "100"]]], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [1, []], [0, [[12, "100"]]], [0, []], [0, []], [0, [[13, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[18, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[1, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[2, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[13, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [0, [[9, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[8, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[12, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[17, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[12, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, [[13, "100"]]], [0, []], [0, []], [0, []], [0, [[0, "100"], [15, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[15, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[1, "100"], [15, "100"]]], [0, []], [1, []], [0, [[0, "100"]]], [0, []], [1, []], [0, [[13, "100"]]], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, [[13, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[18, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[3, "100"], [8, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[2, "100"], [20, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"], [18, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [3, []], [0, [[2, "100"], [8, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"], [20, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[4, "100"], [17, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[4, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[4, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[4, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[4, "100"]]], [0, []], [0, []], [0, []], [0, [[3, "100"]]], [0, []], [0, []], [0, []], [0, [[12, "100"]]], [0, []], [0, []], [0, []], [0, [[4, "100"]]], [0, []], [0, []], [0, []], [0, [[5, "100"], [20, "100"]]], [0, []], [0, []], [0, [[5, "100"]]], [0, []], [0, []], [0, [[4, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[5, "100"]]], [0, []], [0, []], [0, [[5, "100"]]], [0, []], [0, []], [0, [[4, "100"]]], [0, []], [0, []], [0, []], [0, [[1, "100"]]], [0, []], [0, []], [0, []], [0, [[5, "100"]]], [0, []], [0, []], [0, [[5, "100"]]], [0, []], [1, []], [0, [[4, "100"]]], [0, []], [1, []], [0, [[1, "100"], [9, "100"]]], [0, []], [1, []], [0, [[1, "100"]]], [0, []], [1, []], [0, [[6, "100"]]], [0, []], [0, []], [0, []], [0, [[5, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [1, []], [0, [[2, "100"]]], [0, []], [1, []], [0, [[6, "100"]]], [0, []], [0, []], [0, []], [0, [[5, "100"]]], [0, []], [0, []], [0, []], [0, [[2, "100"]]], [0, []], [1, []], [0, [[2, "100"]]], [0, []], [1, []], [0, [[6, "100"]]], [0, []], [1, []], [0, [[19, "100"], [12, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [0, []], [1, []], [2, []], [0, [[8, "100"], [19, "100"]]], [0, []], [0, [[8, "100"], [19, "100"]]], [0, []], [0, [[8, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[8, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[9, "100"], [19, "100"]]], [0, []], [0, [[9, "100"], [19, "100"]]], [0, []], [0, [[9, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[9, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, []], [0, []], [2, []], [3, []], [0, [[11, "100"], [19, "100"]]], [0, []], [0, [[11, "100"], [19, "100"]]], [0, []], [0, [[11, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[11, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[11, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[11, "100"], [19, "100"]]], [0, []], [0, []], [0, []], [0, [[11, "100"], [19, "100"]]], [0, []], [0, []]]}]"""))

    try:
        from print_functions import prompt_control_function
        prompt_control_function(globals())
    except:
        print("This file is not executable")
